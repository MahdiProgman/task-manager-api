// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
}

model User {
  @@map("tbl_users")
  id String @id @default(uuid())
  firstName String @db.VarChar(50)
  lastName String @db.VarChar(50)
  email String @unique @db.VarChar(50)
  password String @db.VarChar(50)
  tasks Task[]
  categories Category[]
  createdAt DateTime @default(now())
}

model Task {
  @@map("tbl_tasks")
  id String @id @default(uuid())
  title String @db.VarChar(50)
  description String @db.VarChar(100)
  status TaskStatus @default(PENDING)
  priority TaskPriority
  dueDate DateTime
  userId String
  user User @relation(fields: [userId], references: [id])
  categoryId String
  category Category @relation(fields: [categoryId], references: [id])
  subTasks SubTask[]
  createdAt DateTime @default(now())
}

model Category {
  @@map("tbl_categories")
  id String @id @default(uuid())
  name String @db.VarChar(50)
  userId String
  user User @relation(fields: [userId], references: [id])
  tasks Task[]
  createdAt DateTime @default(now())

  @@unique([name, userId])
}

model SubTask {
  @@map("tbl_subtasks")
  id String @id @default(uuid())
  title String @db.VarChar(50)
  status TaskStatus @default(PENDING)
  taskId String
  task Task @relation(fields: [taskId], references: [id])
  createdAt DateTime @default(now())
}